#!/usr/bin/env bash

oper=$1
jarfile='/usr/share/cloudstack-common/lib/cloudstack-utils.jar'
process='/etc/default/cloudstack-management'
monitoring='/usr/lib/systemd/system/mold-monitoring.service'
securityjarfile='/usr/share/cloudstack-common/lib/'
scriptpath='/usr/share/cloudstack-common/scripts'

function afterStarted()
{
    sed -i "/BOOTSTRAP_CLASS=org.apache.cloudstack.ServerDaemon/d" $process
    echo "BOOTSTRAP_CLASS=org.apache.cloudstack.ServerDaemon" >> $process
}

function beforeStart()
{
    sed -i "/BOOTSTRAP_CLASS=org.apache.cloudstack.ServerDaemon/d" /etc/default/cloudstack-management
    # Enter the password required when creating kek
    echo "::::: Enter the required password when generating a key encryption key(KEK).(more than 4 characters) :::::"

    while :
    do
        echo -n "Password : "
        read -s kek_pass
        echo " "

        if [ -z $kek_pass ] || [ ${#kek_pass} -lt 4 ]
        then
            echo "Please check your password again.(more than 4 characters)"
        else
            break
        fi
    done

    # secretkey=$(openssl enc -aria-256-cbc -a -d -pbkdf2 -k $kek_pass -saltlen 16 -md sha2-256 -iter 100000 -in key.enc)
    # encPassword=$(java -classpath $jarfile com.cloud.utils.crypt.EncryptionCLI -i $kek_pass -p $secretkey | sed 's/\//\\\//g')
    # echo "BOOTSTRAP_CLASS=org.apache.cloudstack.ServerDaemon "$encPassword $secretkey >> $process

    kek_pass=$(echo $kek_pass | base64)
    echo "BOOTSTRAP_CLASS=org.apache.cloudstack.ServerDaemon "$kek_pass >> $process

    init=$(sed -n '9p' $monitoring)
    blank=' '
    if [[ "$init" != *"$blank"* ]]; then
        sed -i "9s/$/ $kek_pass/g" $monitoring
        systemctl daemon-reload
    fi
}

if [ "$oper" == "start" ]; then
    beforeStart
    systemctl start cloudstack-management
    systemctl start mold-monitoring
    # 자체시험 실패 테스트 케이스
    # systemctl stop cloudstack-management
    afterStarted
elif [ "$oper" == "restart" ]; then
    beforeStart
    systemctl restart cloudstack-management
    systemctl restart mold-monitoring
    afterStarted
elif [ "$oper" == "stop" ]; then
    systemctl stop cloudstack-management
    systemctl stop mold-monitoring
else
    echo "Please enter the parameter value (start, stop, restart)"
    exit 0
fi


# override variable to 0 and 1
for var in {1..5}
do 
    kek_pass=01010101
done
